{"version":3,"sources":["components/Section/Section.module.css","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Container/Container.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","data/constans.js","components/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","wrap","caption","prototype","PropType","string","inRequired","element","FeedbackBtn","feedback","onleaveFeedback","button","data-feedback","onClick","FeedbackOptions","options","map","PropTypes","arrayOf","func","isRequired","Notification","message","propType","Statistics","good","neutral","bad","total","positivePercentage","list","fdbkOptions","App","useState","setGood","setNeutral","setBad","countTotalFeedback","target","dataset","prevState","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,wB,iBCA5DD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,2B,6GCCV,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,I,oCCAjCI,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOL,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEI,KAAtB,UACE,oBAAIL,UAAWC,IAAEK,QAAjB,SAA2BF,IAC1BL,MAKPI,EAAQI,UAAY,CAClBH,MAAOI,IAASC,OAAOC,WACvBX,SAAUS,IAASG,QAAQD,YAGdP,Q,gBCdTS,EAAc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/B,OACE,wBACEd,UAAWC,IAAEc,OACbC,gBAAeH,EACfI,QAASH,EAHX,SAKGD,KAIDK,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAClC,OAAOK,EAAQC,KAAI,SAAAD,GAAO,OACxB,cAAC,EAAD,CAAaN,SAAUM,EAASL,gBAAiBA,QAIrDI,EAAgBX,UAAY,CAC1BY,QAASE,IAAUC,QAAQD,IAAUZ,QACrCK,gBAAiBO,IAAUE,KAAKC,YAGnBN,Q,gBCtBTO,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAG1B,UAAWC,IAAEyB,QAAhB,SAA0BA,KAEhED,EAAaE,SAAW,CACtBD,QAASlB,IAASC,OAAOe,YAGZC,Q,iBCkBAG,EAvBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACGD,EAAQ,GACP,sBAAKhC,UAAWC,IAAEiC,KAAlB,UACE,yCAAYL,KACZ,2CAAcC,KACd,wCAAWC,KACX,0CAAaC,KACb,uDAA0BC,EAA1B,UAGO,IAAVD,GAAe,cAAC,EAAD,CAAcN,QAAQ,0BChB/BS,EAAc,CAAC,OAAQ,UAAW,OCyDhCC,MAlDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNR,EADM,KACAS,EADA,OAEiBD,mBAAS,GAF1B,mBAENP,EAFM,KAEGS,EAFH,OAGSF,mBAAS,GAHlB,mBAGNN,EAHM,KAGDS,EAHC,KAKPC,EAAqB,kBAAMZ,EAAOC,EAAUC,GAwBlD,OACE,eAACjC,EAAD,WACE,cAAC,EAAD,CAASM,MAAM,wBAAf,SACE,cAAC,EAAD,CACEe,QAASgB,EACTrB,gBA3BkB,SAAC,GAEzB,OAFwC,EAAb4B,OACCC,QAApB9B,UAEN,IAAK,OACHyB,GAAQ,SAAAM,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHL,GAAW,SAAAK,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHJ,GAAO,SAAAI,GAAS,OAAIA,EAAY,WAoBlC,cAAC,EAAD,CAASxC,MAAM,aAAf,SACE,cAAC,EAAD,CACEyB,KAAMA,EACNC,QAASA,EACTE,MAAOS,IACPV,IAAKA,EACLE,mBAnBgC,WACtC,IAAMD,EAAQS,IACd,OAAOT,EAAQa,KAAKC,MAAOjB,EAAOG,EAAS,KAAO,EAiBxBe,WC9C9BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ee97c91e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"Section_caption__IV78v\",\"wrap\":\"Section_wrap__MgPbV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\"};","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import PropType from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.wrap}>\n      <h2 className={s.caption}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.prototype = {\n  title: PropType.string.inRequired,\n  children: PropType.element.inRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackBtn = ({ feedback, onleaveFeedback }) => {\n  return (\n    <button\n      className={s.button}\n      data-feedback={feedback}\n      onClick={onleaveFeedback}\n    >\n      {feedback}\n    </button>\n  );\n};\nconst FeedbackOptions = ({ options, onleaveFeedback }) => {\n  return options.map(options => (\n    <FeedbackBtn feedback={options} onleaveFeedback={onleaveFeedback} />\n  ));\n};\n\nFeedbackOptions.prototype = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onleaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropType from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => <p className={s.message}>{message}</p>;\n\nNotification.propType = {\n  message: PropType.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport Notification from '../Notification';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      {total > 0 && (\n        <div className={s.list}>\n          <div>Good: {good}</div>\n          <div>Neutral:{neutral}</div>\n          <div>Bad: {bad}</div>\n          <div>Total: {total}</div>\n          <div>PositivePercentage: {positivePercentage}%</div>\n        </div>\n      )}\n      {total === 0 && <Notification message=\"No feedback given\" />}\n    </>\n  );\n};\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","export const fdbkOptions = ['good', 'neutral', 'bad'];\n","import { useState } from 'react';\nimport Container from './Container';\nimport Section from './Section';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport { fdbkOptions } from '../data/constans';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const handleaveFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    switch (feedback) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  return (\n    <Container>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={fdbkOptions}\n          onleaveFeedback={handleaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          total={countTotalFeedback()}\n          bad={bad}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}